package model

import (
	"math"
	"strings"
)

//rand chars for 0..9,a..z,A..Z
var chars = [62]byte{0x36, 0x67, 0x75, 0x64, 0x58, 0x72, 0x49, 0x31, 0x46, 0x6e,
	0x77, 0x32, 0x43, 0x44, 0x4a, 0x4f, 0x61, 0x69, 0x74, 0x66, 0x4e, 0x62, 0x57,
	0x55, 0x5a, 0x65, 0x76, 0x6f, 0x53, 0x45, 0x51, 0x47, 0x50, 0x37, 0x48, 0x34,
	0x7a, 0x59, 0x78, 0x6d, 0x54, 0x63, 0x35, 0x70, 0x39, 0x4b, 0x6c, 0x52, 0x30,
	0x68, 0x71, 0x6b, 0x42, 0x41, 0x4c, 0x73, 0x6a, 0x38, 0x4d, 0x79, 0x56, 0x33}

func GenSortUrl(id uint32) string {
	res := new(strings.Builder)
	var i uint32

	for id != 0 {
		i, id = id%62, id/62
		res.WriteByte(chars[i])
	}

	return res.String()
}

func UrlToID(url string) (res uint32) {

	urlB := []byte(url)

	for i, v := range urlB {
		res += uint32(charsIndexOf(v) * int(math.Pow(62, float64(i))))
	}
	return

}

func charsIndexOf(b byte) int {
	for k, v := range chars {
		if b == v {
			return k
		}
	}
	return -1
}
